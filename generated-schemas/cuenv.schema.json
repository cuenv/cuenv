{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Cuenv",
  "description": "Root Cuenv configuration structure",
  "type": "object",
  "properties": {
    "config": {
      "description": "Configuration settings",
      "anyOf": [
        {
          "$ref": "#/$defs/Config"
        },
        {
          "type": "null"
        }
      ]
    },
    "env": {
      "description": "Environment variables configuration",
      "anyOf": [
        {
          "$ref": "#/$defs/Env"
        },
        {
          "type": "null"
        }
      ]
    },
    "hooks": {
      "description": "Hooks configuration",
      "anyOf": [
        {
          "$ref": "#/$defs/Hooks"
        },
        {
          "type": "null"
        }
      ]
    },
    "tasks": {
      "description": "Tasks configuration",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/$defs/TaskDefinition"
      },
      "default": {}
    }
  },
  "$defs": {
    "CacheMode": {
      "description": "Cache mode options",
      "type": "string",
      "enum": ["off", "read", "read-write", "write"]
    },
    "Config": {
      "description": "Main configuration structure for cuenv",
      "type": "object",
      "properties": {
        "auditMode": {
          "description": "Security and debugging",
          "type": ["boolean", "null"]
        },
        "cacheEnabled": {
          "type": ["boolean", "null"]
        },
        "cacheMode": {
          "description": "Cache configuration",
          "anyOf": [
            {
              "$ref": "#/$defs/CacheMode"
            },
            {
              "type": "null"
            }
          ]
        },
        "defaultCapabilities": {
          "type": ["array", "null"],
          "items": {
            "type": "string"
          }
        },
        "defaultEnvironment": {
          "description": "Default environment settings",
          "type": ["string", "null"]
        },
        "outputFormat": {
          "description": "Task output format",
          "anyOf": [
            {
              "$ref": "#/$defs/OutputFormat"
            },
            {
              "type": "null"
            }
          ]
        },
        "traceOutput": {
          "description": "Chrome trace generation",
          "type": ["boolean", "null"]
        }
      }
    },
    "Env": {
      "description": "Environment configuration with environment-specific overrides",
      "type": "object",
      "properties": {
        "environment": {
          "description": "Environment-specific overrides",
          "type": ["object", "null"],
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/EnvValue"
            }
          }
        }
      },
      "additionalProperties": {
        "$ref": "#/$defs/EnvValue"
      }
    },
    "EnvValue": {
      "description": "Environment variable values can be strings, integers, booleans, or secrets\nWhen exported to actual environment, these will always be strings",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "integer",
          "format": "int64"
        },
        {
          "type": "boolean"
        },
        {
          "$ref": "#/$defs/Secret"
        }
      ]
    },
    "ExecResolver": {
      "description": "Resolver for executing commands to retrieve secret values",
      "type": "object",
      "properties": {
        "args": {
          "description": "Arguments to pass to the command",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "description": "Command to execute",
          "type": "string"
        }
      },
      "required": ["command", "args"]
    },
    "Hook": {
      "description": "A hook represents a command that can be executed when entering or exiting environments\nBased on schema/hooks.cue #ExecHook definition",
      "type": "object",
      "properties": {
        "args": {
          "description": "Arguments to pass to the command",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "command": {
          "description": "The command to execute",
          "type": "string"
        },
        "dir": {
          "description": "Working directory for command execution (defaults to \".\")",
          "type": ["string", "null"],
          "default": null
        },
        "inputs": {
          "description": "Input files that trigger re-execution when changed",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "source": {
          "description": "Whether to source the command output as shell script to capture environment changes",
          "type": ["boolean", "null"]
        }
      },
      "required": ["command"]
    },
    "HookList": {
      "description": "Hook list can be a single hook or an array of hooks",
      "anyOf": [
        {
          "$ref": "#/$defs/Hook"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Hook"
          }
        }
      ]
    },
    "Hooks": {
      "description": "Collection of hooks that can be executed",
      "type": "object",
      "properties": {
        "onEnter": {
          "description": "Hooks to execute when entering an environment",
          "anyOf": [
            {
              "$ref": "#/$defs/HookList"
            },
            {
              "type": "null"
            }
          ]
        },
        "onExit": {
          "description": "Hooks to execute when exiting an environment",
          "anyOf": [
            {
              "$ref": "#/$defs/HookList"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "OutputFormat": {
      "description": "Task output format options",
      "type": "string",
      "enum": ["tui", "spinner", "simple", "tree"]
    },
    "Secret": {
      "description": "Secret definition with resolver\nThis is the base type that can be extended in CUE",
      "type": "object",
      "properties": {
        "resolver": {
          "description": "Resolver configuration",
          "$ref": "#/$defs/ExecResolver"
        }
      },
      "additionalProperties": true,
      "required": ["resolver"]
    },
    "Shell": {
      "description": "Shell configuration for task execution",
      "type": "object",
      "properties": {
        "command": {
          "description": "Shell executable name (e.g., \"bash\", \"fish\", \"zsh\")",
          "type": ["string", "null"]
        },
        "flag": {
          "description": "Flag for command execution (e.g., \"-c\", \"--command\")",
          "type": ["string", "null"]
        }
      }
    },
    "Task": {
      "description": "A single executable task",
      "type": "object",
      "properties": {
        "args": {
          "description": "Arguments for the command",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "command": {
          "description": "Command to execute",
          "type": "string"
        },
        "dependencies": {
          "description": "Task dependencies (names of tasks that must run first)",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the task",
          "type": ["string", "null"],
          "default": null
        },
        "inputs": {
          "description": "Input files/resources",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "outputs": {
          "description": "Output files/resources",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "shell": {
          "description": "Shell configuration for command execution (optional)",
          "anyOf": [
            {
              "$ref": "#/$defs/Shell"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": ["command"]
    },
    "TaskDefinition": {
      "description": "A task definition can be either a single task or a group of tasks",
      "anyOf": [
        {
          "description": "A single task",
          "$ref": "#/$defs/Task"
        },
        {
          "description": "A group of tasks",
          "$ref": "#/$defs/TaskGroup"
        }
      ]
    },
    "TaskGroup": {
      "description": "Represents a group of tasks with execution mode",
      "anyOf": [
        {
          "description": "Sequential execution: array of tasks executed in order",
          "type": "array",
          "items": {
            "$ref": "#/$defs/TaskDefinition"
          }
        },
        {
          "description": "Parallel execution: named tasks that can run concurrently",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/TaskDefinition"
          }
        }
      ]
    }
  }
}
